@import "https://unpkg.com/open-props/open-props.min.css";

body::before {
  content: "";
  --line: color-mix(in hsl, canvasText, transparent 70%);
  content: '';
  height: 100vh;
  width: 100vw;
  position: fixed;
  background: linear-gradient(
        90deg,
        var(--line) 1px,
        transparent 1px var(--size)
      )
      50% 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
      var(--size) var(--size);
  mask: linear-gradient(-20deg, transparent 50%, white);
  animation: move 1s infinite linear;
}


.card:not(:hover) img {
  transition: translate 0.2s;
}

.card:hover img {
  translate:
    calc((var(--ratio-x) - 0.5) * 20%),
    calc((var(--ratio-y) - 0.5) * 20%);
}

.card {
  height: 30rem;
  overflow: hidden;
  aspect-ratio: 1 / 2;
  width: clamp(260px, 50vmin, 320px);
  border-radius: 20px;
  transform-style: preserve-3d;
  touch-action: none;
  transition: transform 0.2s;
 }



.wrapper-gradient-text {
  text-align: center;
  font-family: "Caveat", cursive;
  font-size: 3rem;
  display: flex;
  justify-content: center;
  color: transparent;
}

.wrapper-gradient-text-1 {
  text-align: center;
  font-family: "Caveat", cursive;
  font-size: 1.75rem;
  display: flex;
  color: transparent;
  margin-bottom: 2em;
  justify-content: center;
}

.text-layer {
  position: relative;
  transform: rotateX(-0deg) translateZ(50px);
  background: linear-gradient(109.6deg,
        rgb(110, 139, 156, 0.9) 20%,
        rgb(142, 186, 211, 0.3) 42%,
        rgba(146, 165, 189, 0.5) 71.5%,
        rgb(106, 131, 143, 0.7) 100.2%);
  text-shadow: 0px 15px 0px rgb(126, 159, 172);

  -webkit-background-clip: text;
  background-clip: text;  
  color: transparent;

  animation: shadowDrip 2s infinite alternate-reverse ease-in-out;
  margin-bottom: 0.0em;
}

@keyframes melt {
  0% {
    transform: scaleY(1) translateY(0);
  }

  100% {
    transform: scaleY(1.1) translateY(5px);
  }
}

@keyframes shadowDrip {
  0% {
    text-shadow: 0px 5px 0px rgba(78, 136, 170, 0.853);
  }

  100% {
    text-shadow: 0px 20px 30px rgba(80, 121, 148, 0.996),
      0px 30px 40px rgba(70, 118, 138, 0.822),
      0px 70px 5px rgba(69, 107, 150, 0.781);
  }
}

.card:not(:hover) img {
  transition: translate 0.9s;
}

.card:hover img {
  translate:
    calc((var(--ratio-x) - 0.5) * 20%)
    calc((var(--ratio-y) - 0.5) * 20%);
}

.card[data-active="true"][data-parallax="true"] {
  transition: transform 0s;
}

.card:hover {
  transform: scale(1.1);
  transform:
    rotateX(calc((var(--ratio-y) - 0.5) * 50deg))
    rotateY(calc((var(--ratio-x) - 0.5) * -40deg));
}

.card:after {
  content: "";
  position: absolute;
  inset: 0;
  background:
    radial-gradient(circle at calc(var(--ratio-x) * 100%) calc(var(--ratio-y) * 100%), hsl(0 0% 100% / 0.5), transparent 50%);
  background-repeat: no-repeat;
  background-blend-mode:luminosity;
  z-index: 3;
}

.card:before {
  content: "";
  background:
/*url(https://assets.codepen.io/605876/code-icon-bg.svg) 0 0 / 18% 18%,*/
   linear-gradient(115deg,
     transparent 20%,
     rgba(152, 193, 196, 0.74) 100%, /* Change to orange */
     transparent 48% 52%,
     rgb(152, 193, 196) 100%, /* Change to orange */
     transparent
   )
   80% 80% / 300% 300%;
  filter: brightness(1.5) contrast(1.2); /* Adjust as needed */
  background-blend-mode: overlay;
  mix-blend-mode:luminosity;
  position: absolute;
  inset: 0;
  z-index: 2;
  opacity: 0.05;
  transition: opacity 0.2s;
}

.card:hover:before {
  background-position:
    calc(var(--ratio-x) * 10%) calc(var(--ratio-y) * 10%),
    calc(80% + (var(--ratio-x) * -50%)) calc(80% + (var(--ratio-y) * -50%));
  opacity: 1;
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: dark only;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }
}


 





 
